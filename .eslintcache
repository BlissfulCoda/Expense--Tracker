[{"/Users/ronniekiyegga/Desktop/react-expense-tracker/src/index.js":"1","/Users/ronniekiyegga/Desktop/react-expense-tracker/src/App.js":"2","/Users/ronniekiyegga/Desktop/react-expense-tracker/src/Components/Details/Details.jsx":"3","/Users/ronniekiyegga/Desktop/react-expense-tracker/src/Components/Details/styles.js":"4","/Users/ronniekiyegga/Desktop/react-expense-tracker/src/styles.js":"5","/Users/ronniekiyegga/Desktop/react-expense-tracker/src/Components/Main/Main.jsx":"6","/Users/ronniekiyegga/Desktop/react-expense-tracker/src/Components/Main/styles.js":"7","/Users/ronniekiyegga/Desktop/react-expense-tracker/src/Components/Main/Form/Form.jsx":"8","/Users/ronniekiyegga/Desktop/react-expense-tracker/src/Components/Main/Form/styles.js":"9","/Users/ronniekiyegga/Desktop/react-expense-tracker/src/Components/Main/List/List.jsx":"10","/Users/ronniekiyegga/Desktop/react-expense-tracker/src/Components/Main/List/style.js":"11","/Users/ronniekiyegga/Desktop/react-expense-tracker/src/context/context.js":"12","/Users/ronniekiyegga/Desktop/react-expense-tracker/src/context/contextReducer.js":"13","/Users/ronniekiyegga/Desktop/react-expense-tracker/src/constants/categories.js":"14","/Users/ronniekiyegga/Desktop/react-expense-tracker/src/utils/formatDate.js":"15","/Users/ronniekiyegga/Desktop/react-expense-tracker/src/useTransactions.js":"16"},{"size":430,"mtime":1612375675854,"results":"17","hashOfConfig":"18"},{"size":974,"mtime":1612375878309,"results":"19","hashOfConfig":"18"},{"size":703,"mtime":1612385428777,"results":"20","hashOfConfig":"18"},{"size":244,"mtime":1612280895644,"results":"21","hashOfConfig":"18"},{"size":551,"mtime":1612280378562,"results":"22","hashOfConfig":"18"},{"size":1213,"mtime":1612386758906,"results":"23","hashOfConfig":"18"},{"size":490,"mtime":1612291988311,"results":"24","hashOfConfig":"18"},{"size":4811,"mtime":1612383361937,"results":"25","hashOfConfig":"18"},{"size":257,"mtime":1612293039868,"results":"26","hashOfConfig":"18"},{"size":1660,"mtime":1612322795638,"results":"27","hashOfConfig":"18"},{"size":398,"mtime":1612296700419,"results":"28","hashOfConfig":"18"},{"size":1395,"mtime":1612386551425,"results":"29","hashOfConfig":"18"},{"size":538,"mtime":1612385279506,"results":"30","hashOfConfig":"18"},{"size":1659,"mtime":1612363248183,"results":"31","hashOfConfig":"18"},{"size":333,"mtime":1612364597059,"results":"32","hashOfConfig":"18"},{"size":1112,"mtime":1612367563226,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"rmv29z",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/ronniekiyegga/Desktop/react-expense-tracker/src/index.js",["70"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { speechProvider, SpeechProvider } from '@speechly/react-client';\n\nimport { Provider } from './context/context';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <SpeechProvider appId=\"05abb4b8-6016-49fd-afd6-ff5d8757422b\" language=\"en-US\">\n    <Provider>\n      <App />\n    </Provider>\n  </SpeechProvider>,\n  document.getElementById('root')\n);\n",["71","72"],"/Users/ronniekiyegga/Desktop/react-expense-tracker/src/App.js",[],"/Users/ronniekiyegga/Desktop/react-expense-tracker/src/Components/Details/Details.jsx",[],"/Users/ronniekiyegga/Desktop/react-expense-tracker/src/Components/Details/styles.js",[],"/Users/ronniekiyegga/Desktop/react-expense-tracker/src/styles.js",[],"/Users/ronniekiyegga/Desktop/react-expense-tracker/src/Components/Main/Main.jsx",[],"/Users/ronniekiyegga/Desktop/react-expense-tracker/src/Components/Main/styles.js",[],"/Users/ronniekiyegga/Desktop/react-expense-tracker/src/Components/Main/Form/Form.jsx",["73"],"import React, { useState, useEffect, useContext } from 'react';\nimport {\n  TextField,\n  Typography,\n  Grid,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from '@material-ui/core';\nimport useStyles from './styles';\nimport {\n  incomeCategories,\n  expenseCategories\n} from '../../../constants/categories';\n\nimport formatDate from '../../../utils/formatDate';\nimport { ExpenseTrackerContext } from '../../../context/context';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSpeechContext } from '@speechly/react-client';\nconst initialState = {\n  amount: '',\n  category: '',\n  type: 'Income',\n  date: formatDate(new Date())\n};\n\nconst Form = () => {\n  const classes = useStyles();\n  const [formData, setFormData] = useState(initialState);\n  const { addTransaction } = useContext(ExpenseTrackerContext);\n  const { segment } = useSpeechContext();\n\n  const createTransaction = () => {\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-'))\n      return;\n    const transaction = {\n      ...formData,\n      amount: Number(formData.amount),\n      id: uuidv4()\n    };\n\n    addTransaction(transaction);\n    setFormData(initialState);\n  };\n\n  useEffect(() => {\n    if (segment) {\n      if (segment.intent.intent === 'add_expense') {\n        setFormData({ ...formData, type: 'Expense' });\n      } else if (segment.intent.intent === 'add_income') {\n        setFormData({ ...formData, type: 'Income' });\n      } else if (\n        segment.isFinal &&\n        segment.intent.intent === 'create_transaction'\n      ) {\n        return createTransaction();\n      } else if (\n        segment.isFinal &&\n        segment.intent.intent === 'cancel_transaction'\n      ) {\n        return setFormData(initialState);\n      }\n\n      segment.entities.forEach(e => {\n        const category = `${e.value.charAt(0)}${e.value\n          .slice(1)\n          .toLowerCase()}`;\n\n        switch (e.type) {\n          case 'amount':\n            setFormData({ ...formData, amount: e.value });\n            break;\n          case 'category':\n            if (incomeCategories.map(ic => ic.type).includes(category)) {\n              setFormData({ ...formData, type: 'Income', category });\n            } else if (\n              expenseCategories.map(ic => ic.type).includes(category)\n            ) {\n              setFormData({ ...formData, type: 'Income', category });\n            }\n            setFormData({ ...formData, category });\n            break;\n          case 'date':\n            setFormData({ ...formData, date: e.value });\n            break;\n          default:\n            break;\n        }\n      });\n      if (\n        segment.isFinal &&\n        formData.amount &&\n        formData.category &&\n        formData.type\n      ) {\n        createTransaction();\n      }\n    }\n  }, [segment]);\n\n  const selectedCategories =\n    formData.type === 'income' ? incomeCategories : expenseCategories;\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\n          {segment && <>{segment.words.map(w => w.value).join(' ')}</>}\n        </Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Type</InputLabel>\n          <Select\n            value={formData.type}\n            onChange={e => setFormData({ ...formData, type: e.target.value })}\n          >\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Category</InputLabel>\n          <Select\n            value={formData.category}\n            onChange={e =>\n              setFormData({ ...formData, category: e.target.value })\n            }\n          >\n            {selectedCategories.map(c => (\n              <MenuItem key={c.type} value={c.type}>\n                {c.type}{' '}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          type=\"number\"\n          label=\"Amount\"\n          fullWidth\n          value={formData.amount}\n          onChange={e => setFormData({ ...formData, amount: e.target.value })}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          type=\"date\"\n          label=\"Date\"\n          fullWidth\n          value={formData.date}\n          onChange={e =>\n            setFormData({ ...formData, date: formatDate(e.target.value) })\n          }\n        />\n      </Grid>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n        onClick={createTransaction}\n      >\n        Create\n      </Button>\n    </Grid>\n  );\n};\n\nexport default Form;\n","/Users/ronniekiyegga/Desktop/react-expense-tracker/src/Components/Main/Form/styles.js",[],"/Users/ronniekiyegga/Desktop/react-expense-tracker/src/Components/Main/List/List.jsx",["74"],"import React, { useContext } from 'react';\nimport {\n  List as MUIList,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  ListItemSecondaryAction,\n  IconButton,\n  Slide,\n  Icon\n} from '@material-ui/core';\nimport { Delete, MoneyOff } from '@material-ui/icons';\n\nimport { ExpenseTrackerContext } from '../../../context/context';\nimport useStyles from './style';\n\nconst List = () => {\n  const classes = useStyles();\n  const { deleteTransaction, transactions } = useContext(ExpenseTrackerContext);\n\n  return (\n    <MUIList dense={false} className={classes.list}>\n      {transactions.map(transaction => (\n        <Slide\n          direction=\"down\"\n          in\n          mountOnEnter\n          unmountOnExit\n          key={transaction.id}\n        >\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar\n                className={\n                  transaction.type === 'Income'\n                    ? classes.avatarIncome\n                    : classes.avatarExpense\n                }\n              >\n                <MoneyOff />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={transaction.category}\n              secondary={`£${transaction.amount} - ${transaction.date}`}\n            />\n            <ListItemSecondaryAction>\n              <IconButton\n                edge=\"end\"\n                arial-label=\"delete\"\n                onClick={() => deleteTransaction(transaction.id)}\n              >\n                <Delete />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </Slide>\n      ))}\n    </MUIList>\n  );\n};\n\nexport default List;\n","/Users/ronniekiyegga/Desktop/react-expense-tracker/src/Components/Main/List/style.js",[],"/Users/ronniekiyegga/Desktop/react-expense-tracker/src/context/context.js",[],"/Users/ronniekiyegga/Desktop/react-expense-tracker/src/context/contextReducer.js",[],"/Users/ronniekiyegga/Desktop/react-expense-tracker/src/constants/categories.js",[],"/Users/ronniekiyegga/Desktop/react-expense-tracker/src/utils/formatDate.js",[],"/Users/ronniekiyegga/Desktop/react-expense-tracker/src/useTransactions.js",[],{"ruleId":"75","severity":1,"message":"76","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":24},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":101,"column":6,"nodeType":"85","endLine":101,"endColumn":15,"suggestions":"86"},{"ruleId":"75","severity":1,"message":"87","line":11,"column":3,"nodeType":"77","messageId":"78","endLine":11,"endColumn":7},"no-unused-vars","'speechProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["88"],"no-negated-in-lhs",["89"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["90"],"'Icon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"93","text":"94"},[2773,2782],"[createTransaction, formData, segment]"]